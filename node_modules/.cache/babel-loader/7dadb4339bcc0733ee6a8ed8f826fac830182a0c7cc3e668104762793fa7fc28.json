{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\learn\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [items, setItems] = useState([{\n    name: \"Apple\",\n    buyingPrice: 100,\n    sellingPrice: 150\n  }, {\n    name: \"Carrot\",\n    buyingPrice: 50,\n    sellingPrice: 75\n  }]);\n  const [cart, setCart] = useState([]);\n  const [selectedItem, setSelectedItem] = useState({});\n  const [weight, setWeight] = useState(\"\");\n  const [orderCompleted, setOrderCompleted] = useState(false);\n  const [totalOrders, setTotalOrders] = useState(0);\n  const [netProfit, setTotalProfit] = useState(0);\n  const [totalSales, setTotalSales] = useState(0);\n  const handleItemAddToCart = () => {\n    console.log(\"Add to Cart button clicked\");\n    if (selectedItem.name === undefined || weight === \"\") {\n      alert(\"Please select an item and enter the weight\");\n      return;\n    }\n    if (cart.some(item => item.name === selectedItem.name)) {\n      const updatedCart = cart.map(item => {\n        if (item.name === selectedItem.name) {\n          const newWeight = parseFloat(item.weight) + parseFloat(weight);\n          const newTotalCost = parseFloat(item.totalCost) + parseFloat(weight * selectedItem.sellingPrice);\n          const newProfit = newWeight * selectedItem.sellingPrice - newWeight * selectedItem.buyingPrice;\n          setTotalProfit(totalProfit + newProfit - item.profit);\n          setTotalSales(totalSales + newTotalCost - item.totalCost);\n          return {\n            ...item,\n            weight: newWeight,\n            totalCost: newTotalCost,\n            profit: newProfit\n          };\n        } else {\n          return item;\n        }\n      });\n      setCart(updatedCart);\n    } else {\n      const newCartItem = {\n        name: selectedItem.name,\n        weight: weight,\n        profit: weight * selectedItem.sellingPrice - weight * selectedItem.buyingPrice,\n        totalCost: weight * selectedItem.sellingPrice\n      };\n      setTotalOrders(totalOrders + 1);\n      setTotalProfit(totalProfit + newCartItem.profit);\n      setTotalSales(totalSales + newCartItem.totalCost);\n      setCart([...cart, newCartItem]);\n    }\n    setSelectedItem({});\n    setWeight(\"\");\n    setOrderCompleted(true);\n  };\n  const handleNextOrder = () => {\n    setCart([]);\n    setOrderCompleted(false);\n  };\n  const totalProfit = cart.reduce((acc, cur) => acc + cur.profit, 0);\n  const totalCost = cart.reduce((acc, cur) => acc + cur.totalCost, 0);\n  const numberOfOrders = cart.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Item:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedItem.name,\n          onChange: e => setSelectedItem(items.find(item => item.name === e.target.value)),\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.name,\n            children: item.name\n          }, item.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Weight (kg):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: 1,\n          min: 0,\n          step: 0.1,\n          ref: input => selectedItem.weightInput = input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleItemAddToCart(selectedItem.weightInput.value),\n        children: \"Add to cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), orderCompleted && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextOrder,\n        children: \"Next Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Weight (kg)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Profit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: cart.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.totalCost.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.profit.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: totalCost.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: totalProfit.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Orders: \", totalOrders]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Profit: $\", totalProfit.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Sales: $\", totalSales.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"aucSAtX5SMo+uzp2UnZKKyB3/mQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","items","setItems","name","buyingPrice","sellingPrice","cart","setCart","selectedItem","setSelectedItem","weight","setWeight","orderCompleted","setOrderCompleted","totalOrders","setTotalOrders","netProfit","setTotalProfit","totalSales","setTotalSales","handleItemAddToCart","console","log","undefined","alert","some","item","updatedCart","map","newWeight","parseFloat","newTotalCost","totalCost","newProfit","totalProfit","profit","newCartItem","handleNextOrder","reduce","acc","cur","numberOfOrders","length","e","find","target","value","input","weightInput","index","toFixed"],"sources":["D:/React/learn/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  const [items, setItems] = useState([\r\n    { name: \"Apple\", buyingPrice: 100, sellingPrice: 150 },\r\n    { name: \"Carrot\", buyingPrice: 50, sellingPrice: 75 },\r\n  ]);\r\n  const [cart, setCart] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [orderCompleted, setOrderCompleted] = useState(false);\r\n  const [totalOrders, setTotalOrders] = useState(0);\r\n  const [netProfit, setTotalProfit] = useState(0);\r\n  const [totalSales, setTotalSales] = useState(0);\r\n\r\n  const handleItemAddToCart = () => {\r\n    console.log(\"Add to Cart button clicked\");\r\n    if (selectedItem.name === undefined || weight === \"\") {\r\n      alert(\"Please select an item and enter the weight\");\r\n      return;\r\n    }\r\n\r\n    if (cart.some((item) => item.name === selectedItem.name)) {\r\n      const updatedCart = cart.map((item) => {\r\n        if (item.name === selectedItem.name) {\r\n          const newWeight = parseFloat(item.weight) + parseFloat(weight);\r\n          const newTotalCost =\r\n            parseFloat(item.totalCost) +\r\n            parseFloat(weight * selectedItem.sellingPrice);\r\n          const newProfit =\r\n            newWeight * selectedItem.sellingPrice -\r\n            newWeight * selectedItem.buyingPrice;\r\n\r\n          setTotalProfit(totalProfit + newProfit - item.profit);\r\n          setTotalSales(totalSales + newTotalCost - item.totalCost);\r\n\r\n          return {\r\n            ...item,\r\n            weight: newWeight,\r\n            totalCost: newTotalCost,\r\n            profit: newProfit,\r\n          };\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      setCart(updatedCart);\r\n    } else {\r\n      const newCartItem = {\r\n        name: selectedItem.name,\r\n        weight: weight,\r\n        profit:\r\n          weight * selectedItem.sellingPrice -\r\n          weight * selectedItem.buyingPrice,\r\n        totalCost: weight * selectedItem.sellingPrice,\r\n      };\r\n\r\n      setTotalOrders(totalOrders + 1);\r\n      setTotalProfit(totalProfit + newCartItem.profit);\r\n      setTotalSales(totalSales + newCartItem.totalCost);\r\n\r\n      setCart([...cart, newCartItem]);\r\n    }\r\n\r\n    setSelectedItem({});\r\n    setWeight(\"\");\r\n    setOrderCompleted(true);\r\n  };\r\n\r\n  const handleNextOrder = () => {\r\n    setCart([]);\r\n    setOrderCompleted(false);\r\n  };\r\n\r\n  const totalProfit = cart.reduce((acc, cur) => acc + cur.profit, 0);\r\n  const totalCost = cart.reduce((acc, cur) => acc + cur.totalCost, 0);\r\n  const numberOfOrders = cart.length;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Shop</h1>\r\n      <div>\r\n        <label>\r\n          Item:\r\n          <select\r\n            value={selectedItem.name}\r\n            onChange={(e) =>\r\n              setSelectedItem(\r\n                items.find((item) => item.name === e.target.value)\r\n              )\r\n            }\r\n          >\r\n            {items.map((item) => (\r\n              <option key={item.name} value={item.name}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Weight (kg):\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={1}\r\n            min={0}\r\n            step={0.1}\r\n            ref={(input) => (selectedItem.weightInput = input)}\r\n          />\r\n        </label>\r\n        <button\r\n          onClick={() => handleItemAddToCart(selectedItem.weightInput.value)}\r\n        >\r\n          Add to cart\r\n        </button>\r\n        {orderCompleted && (\r\n          <button onClick={handleNextOrder}>Next Order</button>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <h2>Cart</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Weight (kg)</th>\r\n              <th>Total Cost</th>\r\n              <th>Profit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cart.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{item.name}</td>\r\n                <td>{item.weight}</td>\r\n                <td>{item.totalCost.toFixed(2)}</td>\r\n                <td>{item.profit.toFixed(2)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td colSpan=\"2\">Total</td>\r\n              <td>{totalCost.toFixed(2)}</td>\r\n              <td>{totalProfit.toFixed(2)}</td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n      <div className=\"order-summary\">\r\n        <h2>Order Summary</h2>\r\n        <p>Total Orders: {totalOrders}</p>\r\n        <p>Total Profit: ${totalProfit.toFixed(2)}</p>\r\n        <p>Total Sales: ${totalSales.toFixed(2)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}