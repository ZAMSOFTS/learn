{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\learn\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = [{\n  name: \"Apple\",\n  price: 0.5\n}, {\n  name: \"Carrot\",\n  price: 0.3\n}];\nconst App = () => {\n  _s();\n  const [selectedItem, setSelectedItem] = useState(items[0]);\n  const [weight, setWeight] = useState(0);\n  const [pricePerKg, setPricePerKg] = useState(selectedItem.price);\n  const calculateTotalPrice = () => {\n    const totalPrice = weight * pricePerKg;\n    const totalProfit = totalPrice - weight * selectedItem.price;\n    return {\n      totalPrice,\n      totalProfit\n    };\n  };\n  const {\n    totalPrice,\n    totalProfit\n  } = calculateTotalPrice();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"item-select\",\n      children: \"Select item:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"item-select\",\n      onChange: event => setSelectedItem(items.find(item => item.name === event.target.value)),\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.name,\n        children: item.name\n      }, item.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"weight-input\",\n      children: \"Weight (kg):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"weight-input\",\n      type: \"number\",\n      value: weight,\n      onChange: event => setWeight(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"price-per-kg-input\",\n      children: \"Price per kg:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"price-per-kg-input\",\n      type: \"number\",\n      value: pricePerKg,\n      onChange: event => setPricePerKg(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Price: \", totalPrice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Profit: \", totalProfit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pK2mdWB+Sx31KNED1MGiNxleC88=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","items","name","price","App","selectedItem","setSelectedItem","weight","setWeight","pricePerKg","setPricePerKg","calculateTotalPrice","totalPrice","totalProfit","event","find","item","target","value","map"],"sources":["D:/React/learn/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst items = [\r\n  { name: \"Apple\", price: 0.5 },\r\n  { name: \"Carrot\", price: 0.3 },\r\n];\r\n\r\nconst App = () => {\r\n  const [selectedItem, setSelectedItem] = useState(items[0]);\r\n  const [weight, setWeight] = useState(0);\r\n  const [pricePerKg, setPricePerKg] = useState(selectedItem.price);\r\n\r\n  const calculateTotalPrice = () => {\r\n    const totalPrice = weight * pricePerKg;\r\n    const totalProfit = totalPrice - weight * selectedItem.price;\r\n\r\n    return {\r\n      totalPrice,\r\n      totalProfit,\r\n    };\r\n  };\r\n\r\n  const { totalPrice, totalProfit } = calculateTotalPrice();\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"item-select\">Select item:</label>\r\n      <select\r\n        id=\"item-select\"\r\n        onChange={(event) =>\r\n          setSelectedItem(\r\n            items.find((item) => item.name === event.target.value)\r\n          )\r\n        }\r\n      >\r\n        {items.map((item) => (\r\n          <option key={item.name} value={item.name}>\r\n            {item.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label htmlFor=\"weight-input\">Weight (kg):</label>\r\n      <input\r\n        id=\"weight-input\"\r\n        type=\"number\"\r\n        value={weight}\r\n        onChange={(event) => setWeight(event.target.value)}\r\n      />\r\n      <br />\r\n      <label htmlFor=\"price-per-kg-input\">Price per kg:</label>\r\n      <input\r\n        id=\"price-per-kg-input\"\r\n        type=\"number\"\r\n        value={pricePerKg}\r\n        onChange={(event) => setPricePerKg(event.target.value)}\r\n      />\r\n      <br />\r\n      <p>Total Price: {totalPrice}</p>\r\n      <p>Total Profit: {totalProfit}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,KAAK,GAAG,CACZ;EAAEC,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC7B;EAAED,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAI,CAAC,CAC/B;AAED,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAACK,YAAY,CAACF,KAAK,CAAC;EAEhE,MAAMQ,mBAAmB,GAAG,MAAM;IAChC,MAAMC,UAAU,GAAGL,MAAM,GAAGE,UAAU;IACtC,MAAMI,WAAW,GAAGD,UAAU,GAAGL,MAAM,GAAGF,YAAY,CAACF,KAAK;IAE5D,OAAO;MACLS,UAAU;MACVC;IACF,CAAC;EACH,CAAC;EAED,MAAM;IAAED,UAAU;IAAEC;EAAY,CAAC,GAAGF,mBAAmB,EAAE;EAEzD,oBACE;IAAA,wBACE;MAAO,OAAO,EAAC,aAAa;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAQ,eACjD;MACE,EAAE,EAAC,aAAa;MAChB,QAAQ,EAAGG,KAAK,IACdR,eAAe,CACbL,KAAK,CAACc,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACd,IAAI,KAAKY,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAEzD;MAAA,UAEAjB,KAAK,CAACkB,GAAG,CAAEH,IAAI,iBACd;QAAwB,KAAK,EAAEA,IAAI,CAACd,IAAK;QAAA,UACtCc,IAAI,CAACd;MAAI,GADCc,IAAI,CAACd,IAAI;QAAA;QAAA;QAAA;MAAA,QAGvB;IAAC;MAAA;MAAA;MAAA;IAAA,QACK,eACT;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAO,OAAO,EAAC,cAAc;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAQ,eAClD;MACE,EAAE,EAAC,cAAc;MACjB,IAAI,EAAC,QAAQ;MACb,KAAK,EAAEK,MAAO;MACd,QAAQ,EAAGO,KAAK,IAAKN,SAAS,CAACM,KAAK,CAACG,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACnD,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAO,OAAO,EAAC,oBAAoB;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAQ,eACzD;MACE,EAAE,EAAC,oBAAoB;MACvB,IAAI,EAAC,QAAQ;MACb,KAAK,EAAET,UAAW;MAClB,QAAQ,EAAGK,KAAK,IAAKJ,aAAa,CAACI,KAAK,CAACG,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACvD,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAG,eAAa,EAACN,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAChC;MAAA,WAAG,gBAAc,EAACC,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEV,CAAC;AAAC,GAvDIT,GAAG;AAAA,KAAHA,GAAG;AAyDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}